apiVersion: apps/v1
kind: Deployment
metadata:
  name: starknet-dev
  labels:
    release: {{ .Release.Name }}
    app: starknet-dev
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: starknet-dev
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: starknet-dev
    spec:
      volumes:
        - name: vol
          hostPath:
            path: /dumps
        - name: cairo-checkout
          emptyDir: {}
      initContainers:
        - name: git-cairo
          image: appropriate/curl
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              apk add --no-cache git
              git clone --single-branch https://github.com/starkware-libs/cairo /cairo
              cd /cairo
              git checkout 05867c8
          volumeMounts:
            - name: cairo-checkout
              mountPath: /cairo
      containers:
      - name: {{ .Chart.Name }}
        volumeMounts:
          - name: vol
            mountPath: /dumps
{{- if eq .Values.real_node true }}
        image: "{{ .Values.repository | default "eqlabs/pathfinder"}}:{{ .Values.tag | default "v0.1.8-alpha"}}"
{{- else }}
          - name: cairo-checkout
            mountPath: /cairo
        image: "{{ .Values.repository | default "shardlabs/starknet-devnet"}}:{{ .Values.tag | default "0.5.1"}}"
        command: ["sh"]
        args: ["-c", "(wget https://sh.rustup.rs -O - | sh -s -- -y) && apk add gmp-dev g++ gcc libffi-dev && PATH=\"/root/.cargo/bin:${PATH}\" starknet-devnet --lite-mode --host 0.0.0.0 --port {{ .Values.service.internalPort }} --seed {{ .Values.seed }} --cairo-compiler-manifest /cairo/Cargo.toml"]
{{- end }}
        imagePullPolicy: IfNotPresent
{{- if eq .Values.real_node true }}
        env:
          - name: PATHFINDER_HTTP_RPC_ADDRESS
            value: "0.0.0.0:5000"
          - name: RUSTLOG
            value: "info"
          - name: PATHFINDER_ETHEREUM_API_URL
            value: {{ .Values.url_http_L1 }}
{{- else }}
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: PATHFINDER_ETHEREUM_API_URL
            value: {{ .Values.url_http_L1 }}
{{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /is_alive
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 900
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /is_alive
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 900
          failureThreshold: 30
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
